enum Permission {
  ADMIN
  USER
  PERMISSIONUPDATE
}

enum FoodType {
  BAKED
  BREAD
  CHEESE
  CONDIMENT
  DAIRY
  DRINK
  FRUIT
  GRAIN
  MEAT
  NUT
  OTHER
  PASTA
  SNACK
  SWEET
  TEA
  VEGETABLE
}

enum QuantityType {
  CLOVES
  CUP
  GRAMS
  LEAVES
  SPRIGS
  TABLESPOON
  TEASPOON
  WHOLE
}

type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  firstName: String!
  lastName: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission] @scalarList(strategy: RELATION)
  recipes: [Recipe!]
  group: Group @relation(name: "UserGroup")
  createdGroups: [Group!] @relation(name: "CreatedGroups")
  ownedGroups: [Group!] @relation(name: "OwnedGroups")
  mealPlans: [MealPlan!]
}

type Group {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String! @unique
  creator: User! @relation(name: "CreatedGroups")
  owner: User! @relation(name: "OwnedGroups")
  users: [User!]! @relation(name: "UserGroup")
  isPrivate: Boolean @default(value: false)
  mealPlans: [MealPlan!]
}

type Food {
  id: ID! @id
  name: String!
  subName: String
  searchName: String
  types: [FoodType!]! @scalarList(strategy: RELATION)
  image: String
}

type Ingredient {
  id: ID! @id
  food: Food!
  quantity: Float!
  quantityType: QuantityType!
}

type Recipe {
  id: ID! @id
  name: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  searchName: String
  ingredients: [Ingredient!]!
  instructions: String
  author: User
}

type MealDay {
  id: ID! @id
  recipe: Recipe
  date: DateTime!
}

type MealPlan {
  id: ID! @id
  startDate: DateTime!
  endDate: DateTime!
  mealDays: [MealDay!]! @relation(name: "MealDays", onDelete: CASCADE)
  group: Group
  user: User
}